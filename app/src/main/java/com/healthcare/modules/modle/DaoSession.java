package com.healthcare.modules.modle;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.healthcare.modules.modle.kinetics;
import com.healthcare.modules.modle.locus;
import com.healthcare.modules.modle.dataentity;
import com.healthcare.modules.modle.stepbean;

import com.healthcare.modules.modle.kineticsDao;
import com.healthcare.modules.modle.locusDao;
import com.healthcare.modules.modle.dataentityDao;
import com.healthcare.modules.modle.stepbeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig kineticsDaoConfig;
    private final DaoConfig locusDaoConfig;
    private final DaoConfig dataentityDaoConfig;
    private final DaoConfig stepbeanDaoConfig;

    private final kineticsDao kineticsDao;
    private final locusDao locusDao;
    private final dataentityDao dataentityDao;
    private final stepbeanDao stepbeanDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        kineticsDaoConfig = daoConfigMap.get(kineticsDao.class).clone();
        kineticsDaoConfig.initIdentityScope(type);

        locusDaoConfig = daoConfigMap.get(locusDao.class).clone();
        locusDaoConfig.initIdentityScope(type);

        dataentityDaoConfig = daoConfigMap.get(dataentityDao.class).clone();
        dataentityDaoConfig.initIdentityScope(type);

        stepbeanDaoConfig = daoConfigMap.get(stepbeanDao.class).clone();
        stepbeanDaoConfig.initIdentityScope(type);

        kineticsDao = new kineticsDao(kineticsDaoConfig, this);
        locusDao = new locusDao(locusDaoConfig, this);
        dataentityDao = new dataentityDao(dataentityDaoConfig, this);
        stepbeanDao = new stepbeanDao(stepbeanDaoConfig, this);

        registerDao(kinetics.class, kineticsDao);
        registerDao(locus.class, locusDao);
        registerDao(dataentity.class, dataentityDao);
        registerDao(stepbean.class, stepbeanDao);
    }
    
    public void clear() {
        kineticsDaoConfig.getIdentityScope().clear();
        locusDaoConfig.getIdentityScope().clear();
        dataentityDaoConfig.getIdentityScope().clear();
        stepbeanDaoConfig.getIdentityScope().clear();
    }

    public kineticsDao getKineticsDao() {
        return kineticsDao;
    }

    public locusDao getLocusDao() {
        return locusDao;
    }

    public dataentityDao getDataentityDao() {
        return dataentityDao;
    }

    public stepbeanDao getStepbeanDao() {
        return stepbeanDao;
    }

}
